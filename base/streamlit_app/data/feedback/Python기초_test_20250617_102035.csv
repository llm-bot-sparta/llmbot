과제카테고리,학생명,튜터명,질문번호,질문제목,학생답안,점수,피드백,채점시간
Python기초,test,곽승예,PYTHON_1,숫자 리스트의 평균 계산하기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_2,간단한 사칙연산 계산기 함수 만들기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_3,가장 많은 제품 찾기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_4,중복 문자 제거 및 빈도수 계산,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_5,이동 거리 구하기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_6,Github에 있는 데이터 불러오기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_7,결측치 확인,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_8,조건에 맞는 데이터 출력하기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_9,수요일에 예약된 비행기 표 값 평균 구하기,,0,답변이 입력되지 않았습니다.,2025-06-17 10:20:32
Python기초,test,곽승예,PYTHON_10,출발 시간 기준 비행기 수 집계하기,"def get_cat(df):
    df['Dep_Time'] = pd.to_datetime(df['Dep_Time'], format='%H:%M')
    # 출발 시간을 기준으로 ""아침"", ""오후"", ""저녁"", ""밤""으로 분류하는 lambda 함수 적용
    df['Time_Of_Day'] = df['Dep_Time'].apply(
        lambda x: '아침' if 5 <= x.hour < 12 else
                '오후' if 12 <= x.hour < 18 else
                '저녁' if 18 <= x.hour < 24 else
                '밤'
    )

    # 분류 결과 확인
    return df.groupby(['Time_Of_Day'])[['Airline']].count().sort_values(by='Airline', ascending= False).reset_index()",100,"완벽한 답안입니다. pandas 기능을 활용하여 간결하고 효율적으로 코드를 작성했으며, 가독성 또한 뛰어납니다.
```",2025-06-17 10:20:35
