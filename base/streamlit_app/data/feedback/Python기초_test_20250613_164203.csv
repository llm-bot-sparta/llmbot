과제카테고리,학생명,튜터명,질문번호,질문제목,학생답안,점수,피드백,채점시간
Python기초,test,곽승예,PYTHON_1,숫자 리스트의 평균 계산하기,"numbers = [10, 20, 30, 40, 50]
def calculate_stock(numbers):
    total_avg = sum(numbers) / len(numbers)
    return total_avg

calculate_stock(numbers)",80,"함수 외부에서 numbers 리스트를 정의하는 것은 좋은 습관이 아닙니다. 함수는 독립적으로 작동해야 재사용성이 높아집니다. calculate_stock 함수가 numbers 리스트를 인자로 받아서 처리하는 것이 더 바람직합니다. 또한, 변수명을 조금 더 명확하게 표현하면 코드의 가독성을 높일 수 있습니다. 다만, 전반적으로 코드가 간결하고 효율적입니다.",2025-06-13 16:41:55
Python기초,test,곽승예,PYTHON_2,간단한 사칙연산 계산기 함수 만들기,"def simple_calculator(num1, num2, operator):
    if operator == '+':
        return num1 + num2
    elif operator == '-':
        return num1 - num2
    elif operator == '*':
        return num1 * num2
    elif operator == '/':
        if num2 == 0:
            return 'Cannot divide by zero'
        else:
            return num1 / num2
    else:
        return 'Invalid operator'",None,"** 학생 답안은 모범 답안과 완전히 동일하며, 모든 평가 기준을 충족합니다. 연산의 정확성, 코드의 가독성, 효율성 모두 뛰어납니다. 더 개선할 부분은 없어 보입니다.",2025-06-13 16:41:57
Python기초,test,곽승예,PYTHON_3,가장 많은 제품 찾기,"sales_data = {""apple"": 50, ""orange"": 2, ""banana"" : 30}
def find_top_seller(data):
  top_product = """"
  max_sales = -1

  for product, sales in data.items():
    if sales > max_sales:
      max_sales = sales
      top_product = product
  return top_product, max_sales
find_top_seller(sales_data)",90,학생 답안은 문제에서 요구하는 모든 기능을 정확하게 구현했습니다. 가독성 측면에서 `sales_data` 정의 위치를 함수 내부로 옮기거나 함수 인자로 받는 방식으로 개선하면 더욱 좋습니다. 코드 효율성은 매우 좋습니다.,2025-06-13 16:41:59
Python기초,test,곽승예,PYTHON_4,중복 문자 제거 및 빈도수 계산,"input_string = ""abracadabra123321""
def remove_duplicates_and_count(s):
    frequency = {}  # 각 문자의 빈도수를 저장할 딕셔너리

    for char in input_string:
      # 각 문자의 빈도수 업데이트
      if char in frequency.keys():
          frequency[char] += 1
      else:
          frequency[char] = 1

    return list(frequency.items())
remove_duplicates_and_count(input_string)",80,`input_string`이 함수 외부에서 정의되어 있어 함수가 특정 문자열에 종속적인 문제가 있습니다. 함수는 입력 인자 `s`만을 사용하여 동작하도록 수정해야 합니다. `frequency.keys()` 대신 `char in frequency`를 사용하는 것이 더 효율적입니다. 함수 호출 부분은 채점 시에는 제거되어야 합니다.,2025-06-13 16:42:01
Python기초,test,곽승예,PYTHON_5,이동 거리 구하기,"player_positions = {
    ""John Doe"": [(0, 0), (1, 1), (2, 2), (5, 5)],
    ""Jane Smith"": [(2, 2), (3, 8), (6, 8)],
    ""Mike Brown"": [(0, 0), (3, 4), (6, 8)]
}

def calculate_total_distances(player_positions):
    records = []
    for player, positions in player_positions.items():
            total_distance = 0.0
            for i in range(0, len(positions)-1):
                x1, y1 = positions[i]
                x2, y2 = positions[i+1]
                distance = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5
                total_distance += distance
            records.append((player,round(total_distance,2)))
    return records
calculate_total_distances(player_positions)",100,"학생 답안은 모범 답안과 동일한 로직을 구현했으며, 가독성, 효율성 면에서도 우수합니다. 문제에서 제시된 모든 조건을 만족하며, 코드 품질 또한 매우 높습니다. 추가적인 개선점은 찾기 어렵습니다.",2025-06-13 16:42:03
